// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int         @id @default(autoincrement())
  email     String      @unique
  name      String
  password  String
  role      Role        @default(USER)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  sales     Sale[]
  inventory Inventory[]
  auditLogs AuditLog[]

  @@index([email])
}

enum Role {
  USER
  ADMIN
  PHARMACIST
}

model Medicine {
  id          Int         @id @default(autoincrement())
  name        String
  description String?
  packageType String      // Renamed from package for clarity
  unitPrice   Float       // Renamed from price for clarity
  stockCount  Int         @default(0) // Renamed from quantity
  elementId   Int?        // Renamed from element
  supplierId  Int?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  
  supplier    Supplier?   @relation(fields: [supplierId], references: [id])
  sales       Sale[]
  inventory   Inventory[]

  @@index([name])
  @@index([supplierId])
}

model Sale {
  id         Int           @id @default(autoincrement())
  medicineId Int
  quantity   Int
  totalPrice Float
  userId     Int?
  createdAt  DateTime      @default(now())
  
  medicine     Medicine      @relation(fields: [medicineId], references: [id])
  user         User?         @relation(fields: [userId], references: [id])
  transactions Transaction[]

  @@index([medicineId])
  @@index([userId])
}

model Inventory {
  id         Int      @id @default(autoincrement())
  medicineId Int
  quantity   Int
  actionType String   // Renamed from action for clarity
  userId     Int
  createdAt  DateTime @default(now())

  medicine Medicine @relation(fields: [medicineId], references: [id])
  user     User     @relation(fields: [userId], references: [id])

  @@index([medicineId])
  @@index([userId])
}

model Supplier {
  id          Int        @id @default(autoincrement())
  name        String
  contactInfo String?
  address     String
  medicines   Medicine[]

  @@index([name])
}

model Transaction {
  id          Int      @id @default(autoincrement())
  saleId      Int
  paymentType String
  amountPaid  Float
  createdAt   DateTime @default(now())
  
  sale Sale @relation(fields: [saleId], references: [id])

  @@index([saleId])
}

model AuditLog {
  id        Int      @id @default(autoincrement())
  userId    Int
  action    String
  details   String?
  createdAt DateTime @default(now())
  
  user User @relation(fields: [userId], references: [id])

  @@index([userId])
  @@index([createdAt])
}
